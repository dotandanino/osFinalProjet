--------------------------------------------------------------------------------
Profile data file 'callgrind1.out' (creator: callgrind-3.22.0)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 145665557
Trigger: Program termination
Profiled target:  ./randomGraph2 -v 100 -e 4950 -r 42 (PID 60087, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                   
--------------------------------------------------------------------------------
657,284,610 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                    file:function
--------------------------------------------------------------------------------
164,443,800 (25.02%)  ???:0x00000000000200e0 [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
 77,784,782 (11.83%)  ???:0x00000000000ba1a0 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
 58,624,664 ( 8.92%)  ???:0x0000000000021560 [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
 58,229,280 ( 8.86%)  ???:_Unwind_Find_FDE [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
 54,311,384 ( 8.26%)  ???:0x0000000000022510 [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
 45,314,716 ( 6.89%)  ???:__gxx_personality_v0 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
 21,337,304 ( 3.25%)  ???:0x00000000000ba310 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
 14,233,824 ( 2.17%)  ???:0x000000000001ff00 [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
 13,946,272 ( 2.12%)  ???:0x000000000001fc00 [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
 13,946,272 ( 2.12%)  ???:0x00000000000247a0 [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
 13,047,672 ( 1.99%)  ./elf/./elf/dl-find_object.c:_dl_find_object [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  7,694,148 ( 1.17%)  ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S:__strlen_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
  7,368,520 ( 1.12%)  ???:_Unwind_RaiseException [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
  5,966,704 ( 0.91%)  ???:0x00000000000ba4a0 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  5,643,208 ( 0.86%)  ???:0x0000000000022a70 [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
  4,112,369 ( 0.63%)  ../question2/Graph.cpp:Graph::addEdge(int, int) [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  4,025,728 ( 0.61%)  ???:0x0000000000023b00 [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
  3,890,284 ( 0.59%)  ./malloc/./malloc/malloc.c:_int_free [/usr/lib/x86_64-linux-gnu/libc.so.6]
  3,535,000 ( 0.54%)  /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator_base::_M_incr(long) [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  3,240,346 ( 0.49%)  ./malloc/./malloc/malloc.c:malloc [/usr/lib/x86_64-linux-gnu/libc.so.6]
  2,967,960 ( 0.45%)  /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::operator*() const [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  2,875,520 ( 0.44%)  ???:0x0000000000022910 [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
  2,545,200 ( 0.39%)  /usr/include/c++/13/bits/stl_bvector.h:std::operator+(std::_Bit_iterator const&, long) [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  2,400,366 ( 0.37%)  /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  2,329,767 ( 0.35%)  /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::operator[](long) const [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  2,287,426 ( 0.35%)  ./stdlib/./stdlib/random_r.c:random_r [/usr/lib/x86_64-linux-gnu/libc.so.6]
  2,262,368 ( 0.34%)  /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::begin() [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  2,016,180 ( 0.31%)  ./malloc/./malloc/malloc.c:free [/usr/lib/x86_64-linux-gnu/libc.so.6]
  1,940,976 ( 0.30%)  ???:__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,881,124 ( 0.29%)  ./stdlib/./stdlib/random.c:random [/usr/lib/x86_64-linux-gnu/libc.so.6]
  1,869,088 ( 0.28%)  ???:std::runtime_error::runtime_error(char const*) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,559,800 ( 0.24%)  /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  1,545,592 ( 0.24%)  ./elf/./dl-find_object.h:_dl_find_object
  1,437,760 ( 0.22%)  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S:__strcmp_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
  1,414,000 ( 0.22%)  /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::operator+=(long) [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  1,401,816 ( 0.21%)  ???:__cxa_allocate_exception [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,400,382 ( 0.21%)  /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::_Bit_reference(unsigned long*, unsigned long) [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  1,384,700 ( 0.21%)  ./libio/./libio/iofwrite.c:fwrite [/usr/lib/x86_64-linux-gnu/libc.so.6]
  1,374,115 ( 0.21%)  ./libio/./libio/fileops.c:_IO_file_xsputn@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
  1,329,928 ( 0.20%)  ???:0x00000000000ba100 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,329,928 ( 0.20%)  ???:__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,294,008 ( 0.20%)  ./elf/../sysdeps/x86_64/tls_get_addr.S:__tls_get_addr [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  1,288,872 ( 0.20%)  /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  1,270,782 ( 0.19%)  /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::operator[](unsigned long) [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  1,186,152 ( 0.18%)  ???:std::runtime_error::~runtime_error() [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,114,264 ( 0.17%)  ???:__cxa_begin_catch [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,114,264 ( 0.17%)  ???:__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,093,083 ( 0.17%)  /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::operator bool() const [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  1,078,320 ( 0.16%)  ???:_Unwind_SetGR [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
  1,013,856 ( 0.15%)  ../question3/randomGraph.cpp:main [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
  1,006,437 ( 0.15%)  ???:0x0000000004ace4a0 [???]
    934,544 ( 0.14%)  ???:__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    920,395 ( 0.14%)  ???:std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    862,656 ( 0.13%)  ???:std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    754,824 ( 0.11%)  ./elf/./elf/libc-dl_find_object.c:_dl_find_object [/usr/lib/x86_64-linux-gnu/libc.so.6]
    754,824 ( 0.11%)  ???:_Unwind_GetIPInfo [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
    754,824 ( 0.11%)  ???:__cxa_end_catch [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    754,824 ( 0.11%)  ???:__cxa_init_primary_exception [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    754,824 ( 0.11%)  ???:__cxa_throw [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    682,936 ( 0.10%)  ???:0x00000000000bb290 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    623,793 ( 0.09%)  ../question2/Graph.cpp:Graph::isConnected() [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
    580,079 ( 0.09%)  ???:std::ostream& std::ostream::_M_insert<long>(long) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    576,896 ( 0.09%)  ???:operator new(unsigned long) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    575,120 ( 0.09%)  ???:__cxa_get_globals [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    570,114 ( 0.09%)  ???:std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    562,923 ( 0.09%)  ../question2/Graph.cpp:Graph::printGraph() [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
    512,305 ( 0.08%)  ./elf/./elf/dl-lookup.c:do_lookup_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    503,221 ( 0.08%)  ???:0x0000000004ace600 [???]
    503,221 ( 0.08%)  ???:0x0000000004ace620 [???]
    493,982 ( 0.08%)  ./elf/../sysdeps/generic/dl-new-hash.h:_dl_lookup_symbol_x
    490,728 ( 0.07%)  ./stdlib/./stdlib/rand.c:rand [/usr/lib/x86_64-linux-gnu/libc.so.6]
    450,575 ( 0.07%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__mempcpy_avx_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
    448,985 ( 0.07%)  ???:std::ostream::sentry::sentry(std::ostream&) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    431,328 ( 0.07%)  ???:_Unwind_GetCFA [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
    397,829 ( 0.06%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
    396,027 ( 0.06%)  ???:0x0000000000146900 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    364,395 ( 0.06%)  ./libio/./libio/libioP.h:fwrite
    357,300 ( 0.05%)  /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::operator=(bool) [/home/dotan/projects/semester_b/operationSystems/finalProject/question4/randomGraph2]
    323,496 ( 0.05%)  ???:_Unwind_GetLanguageSpecificData [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
    323,496 ( 0.05%)  ???:_Unwind_GetRegionStart [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
    287,557 ( 0.04%)  ???:0x0000000004ace520 [???]
    287,552 ( 0.04%)  ???:__cxa_free_exception [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    287,552 ( 0.04%)  ???:__cxa_get_globals_fast [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    251,608 ( 0.04%)  ???:_Unwind_DeleteException [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
    220,022 ( 0.03%)  ???:0x0000000000142070 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    216,018 ( 0.03%)  ./malloc/./malloc/arena.c:free
    215,746 ( 0.03%)  ./nptl/./nptl/pthread_once.c:pthread_once@@GLIBC_2.34 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    215,673 ( 0.03%)  ???:0x00000000048ef140 [???]
    215,669 ( 0.03%)  ???:0x00000000048ed810 [???]
    215,669 ( 0.03%)  ???:0x00000000048eeac0 [???]

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/13/bits/stl_bvector.h
--------------------------------------------------------------------------------
Ir                 

-- line 80 ----------------------------------------
        .           _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
        .           
        .             struct _Bit_reference
        .             {
        .               _Bit_type * _M_p;
        .               _Bit_type _M_mask;
        .           
        .               _GLIBCXX20_CONSTEXPR
  700,191 ( 0.11%)      _Bit_reference(_Bit_type * __x, _Bit_type __y)
  700,191 ( 0.11%)      : _M_p(__x), _M_mask(__y) { }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               _Bit_reference() _GLIBCXX_NOEXCEPT : _M_p(0), _M_mask(0) { }
        .           
        .           #if __cplusplus >= 201103L
        .               _Bit_reference(const _Bit_reference&) = default;
        .           #endif
        .           
        .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
  450,093 ( 0.07%)      operator bool() const _GLIBCXX_NOEXCEPT
  642,990 ( 0.10%)      { return !!(*_M_p & _M_mask); }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               _Bit_reference&
  121,500 ( 0.02%)      operator=(bool __x) _GLIBCXX_NOEXCEPT
        .               {
   56,700 ( 0.01%)        if (__x)
   99,000 ( 0.02%)  	*_M_p |= _M_mask;
        .                 else
   39,600 ( 0.01%)  	*_M_p &= ~_M_mask;
   13,500 ( 0.00%)        return *this;
   27,000 ( 0.00%)      }
        .           
        .           #if __cplusplus > 202002L
        .               constexpr const _Bit_reference&
        .               operator=(bool __x) const noexcept
        .               {
        .                 if (__x)
        .           	*_M_p |= _M_mask;
        .                 else
-- line 119 ----------------------------------------
-- line 181 ----------------------------------------
        .               _Bit_type * _M_p;
        .               unsigned int _M_offset;
        .           
        .               _GLIBCXX20_CONSTEXPR _GLIBCXX_ALWAYS_INLINE
        .               void
        .               _M_assume_normalized() const
        .               {
        .           #if __has_attribute(__assume__) && !defined(__clang__)
  468,297 ( 0.07%)        unsigned int __ofst = _M_offset;
  312,198 ( 0.05%)        __attribute__ ((__assume__ (__ofst < unsigned(_S_word_bit))));
        .           #endif
  156,499 ( 0.02%)      }
        .           
        .               _GLIBCXX20_CONSTEXPR
  644,436 ( 0.10%)      _Bit_iterator_base(_Bit_type * __x, unsigned int __y)
  644,436 ( 0.10%)      : _M_p(__x), _M_offset(__y) { }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               void
   64,800 ( 0.01%)      _M_bump_up()
        .               {
        .                 _M_assume_normalized();
   64,800 ( 0.01%)        if (_M_offset++ == int(_S_word_bit) - 1)
        .           	{
        .           	  _M_offset = 0;
        .           	  ++_M_p;
        .           	}
   21,600 ( 0.00%)      }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               void
        .               _M_bump_down()
        .               {
        .                 _M_assume_normalized();
        .                 if (_M_offset-- == 0)
        .           	{
        .           	  _M_offset = int(_S_word_bit) - 1;
        .           	  --_M_p;
        .           	}
        .               }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               void
  707,000 ( 0.11%)      _M_incr(ptrdiff_t __i)
        .               {
        .                 _M_assume_normalized();
  424,200 ( 0.06%)        difference_type __n = __i + _M_offset;
  777,700 ( 0.12%)        _M_p += __n / int(_S_word_bit);
  565,600 ( 0.09%)        __n = __n % int(_S_word_bit);
  141,400 ( 0.02%)        if (__n < 0)
        .           	{
        .           	  __n += int(_S_word_bit);
        .           	  --_M_p;
        .           	}
  282,800 ( 0.04%)        _M_offset = static_cast<unsigned int>(__n);
  212,100 ( 0.03%)      }
        .           
        .               _GLIBCXX_NODISCARD
        .               friend _GLIBCXX20_CONSTEXPR bool
        .               operator==(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
        .               {
        .                 __x._M_assume_normalized();
        .                 __y._M_assume_normalized();
        .                 return __x._M_p == __y._M_p && __x._M_offset == __y._M_offset;
-- line 244 ----------------------------------------
-- line 284 ----------------------------------------
        .           
        .               _GLIBCXX_NODISCARD
        .               friend bool
        .               operator>=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
        .               { return !(__x < __y); }
        .           #endif // three-way comparison
        .           
        .               friend _GLIBCXX20_CONSTEXPR ptrdiff_t
    2,000 ( 0.00%)      operator-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
        .               {
        .                 __x._M_assume_normalized();
        .                 __y._M_assume_normalized();
    1,000 ( 0.00%)        return (int(_S_word_bit) * (__x._M_p - __y._M_p)
    2,000 ( 0.00%)  	      + __x._M_offset - __y._M_offset);
      400 ( 0.00%)      }
        .             };
        .           #pragma GCC diagnostic pop
        .           
        .             struct _Bit_iterator : public _Bit_iterator_base
        .             {
        .               typedef _Bit_reference  reference;
        .           #if __cplusplus > 201703L
        .               typedef void	    pointer;
        .           #else
        .               typedef _Bit_reference* pointer;
        .           #endif
        .               typedef _Bit_iterator   iterator;
        .           
        .               _GLIBCXX20_CONSTEXPR
    3,876 ( 0.00%)      _Bit_iterator() : _Bit_iterator_base(0, 0) { }
    3,672 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) (204x)
        .           
        .               _GLIBCXX20_CONSTEXPR
  709,000 ( 0.11%)      _Bit_iterator(_Bit_type * __x, unsigned int __y)
  850,800 ( 0.13%)      : _Bit_iterator_base(__x, __y) { }
1,276,200 ( 0.19%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) (70,900x)
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               iterator
        .               _M_const_cast() const
        .               { return *this; }
        .           
        .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .               reference
  816,189 ( 0.12%)      operator*() const
        .               {
  148,398 ( 0.02%)        _M_assume_normalized();
1,187,184 ( 0.18%)        return reference(_M_p, 1UL << _M_offset);
1,335,582 ( 0.20%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::_Bit_reference(unsigned long*, unsigned long) (74,199x)
  370,995 ( 0.06%)      }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               iterator&
   28,800 ( 0.00%)      operator++()
        .               {
   21,600 ( 0.00%)        _M_bump_up();
   97,200 ( 0.01%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator_base::_M_bump_up() (3,600x)
    3,600 ( 0.00%)        return *this;
    7,200 ( 0.00%)      }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               iterator
        .               operator++(int)
        .               {
        .                 iterator __tmp = *this;
        .                 _M_bump_up();
        .                 return __tmp;
-- line 346 ----------------------------------------
-- line 360 ----------------------------------------
        .               {
        .                 iterator __tmp = *this;
        .                 _M_bump_down();
        .                 return __tmp;
        .               }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               iterator&
  636,300 ( 0.10%)      operator+=(difference_type __i)
        .               {
  565,600 ( 0.09%)        _M_incr(__i);
3,535,000 ( 0.54%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator_base::_M_incr(long) (70,700x)
   70,700 ( 0.01%)        return *this;
  141,400 ( 0.02%)      }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               iterator&
        .               operator-=(difference_type __i)
        .               {
        .                 *this += -__i;
        .                 return *this;
        .               }
        .           
        .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .               reference
  847,188 ( 0.13%)      operator[](difference_type __i) const
1,482,579 ( 0.23%)      { return *(*this + __i); }
7,483,494 ( 1.14%)  => /usr/include/c++/13/bits/stl_bvector.h:std::operator+(std::_Bit_iterator const&, long) (70,599x)
4,094,742 ( 0.62%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::operator*() const (70,599x)
        .           
        .               _GLIBCXX_NODISCARD
        .               friend _GLIBCXX20_CONSTEXPR iterator
  848,400 ( 0.13%)      operator+(const iterator& __x, difference_type __n)
        .               {
  353,500 ( 0.05%)        iterator __tmp = __x;
  565,600 ( 0.09%)        __tmp += __n;
4,949,000 ( 0.75%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::operator+=(long) (70,700x)
  424,200 ( 0.06%)        return __tmp;
  353,500 ( 0.05%)      }
        .           
        .               _GLIBCXX_NODISCARD
        .               friend _GLIBCXX20_CONSTEXPR iterator
        .               operator+(difference_type __n, const iterator& __x)
        .               { return __x + __n; }
        .           
        .               _GLIBCXX_NODISCARD
        .               friend _GLIBCXX20_CONSTEXPR iterator
-- line 402 ----------------------------------------
-- line 418 ----------------------------------------
        .               typedef const bool*          pointer;
        .           #endif
        .               typedef _Bit_const_iterator  const_iterator;
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               _Bit_const_iterator() : _Bit_iterator_base(0, 0) { }
        .           
        .               _GLIBCXX20_CONSTEXPR
    3,000 ( 0.00%)      _Bit_const_iterator(_Bit_type * __x, unsigned int __y)
    3,600 ( 0.00%)      : _Bit_iterator_base(__x, __y) { }
    5,400 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) (300x)
        .           
        .               _GLIBCXX20_CONSTEXPR
    1,800 ( 0.00%)      _Bit_const_iterator(const _Bit_iterator& __x)
    2,800 ( 0.00%)      : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
    3,600 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) (200x)
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               _Bit_iterator
        .               _M_const_cast() const
        .               { return _Bit_iterator(_M_p, _M_offset); }
        .           
        .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .               const_reference
   39,600 ( 0.01%)      operator*() const
        .               {
    7,200 ( 0.00%)        _M_assume_normalized();
   82,800 ( 0.01%)        return _Bit_reference(_M_p, 1UL << _M_offset);
   64,800 ( 0.01%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::_Bit_reference(unsigned long*, unsigned long) (3,600x)
   61,200 ( 0.01%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::operator bool() const (3,600x)
   18,000 ( 0.00%)      }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               const_iterator&
   28,800 ( 0.00%)      operator++()
        .               {
   21,600 ( 0.00%)        _M_bump_up();
   97,200 ( 0.01%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator_base::_M_bump_up() (3,600x)
    3,600 ( 0.00%)        return *this;
    7,200 ( 0.00%)      }
        .           
        .               _GLIBCXX20_CONSTEXPR
        .               const_iterator
        .               operator++(int)
        .               {
        .                 const_iterator __tmp = *this;
        .                 _M_bump_up();
        .                 return __tmp;
-- line 460 ----------------------------------------
-- line 543 ----------------------------------------
        .           	  _GLIBCXX20_CONSTEXPR
        .           	  void operator=(_Bit_iterator __it) { _M_p = __it._M_p; }
        .           	} _M_start;
        .           #endif
        .           	_Bit_iterator	_M_finish;
        .           	_Bit_pointer	_M_end_of_storage;
        .           
        .           	_GLIBCXX20_CONSTEXPR
      816 ( 0.00%)  	_Bvector_impl_data() _GLIBCXX_NOEXCEPT
    1,530 ( 0.00%)  	: _M_start(), _M_finish(), _M_end_of_storage()
    7,548 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::_Bit_iterator() (204x)
      306 ( 0.00%)  	{ }
        .           
        .           #if __cplusplus >= 201103L
        .           	_Bvector_impl_data(const _Bvector_impl_data&) = default;
        .           
        .           	_Bvector_impl_data&
        .           	operator=(const _Bvector_impl_data&) = default;
        .           
        .           	_GLIBCXX20_CONSTEXPR
-- line 561 ----------------------------------------
-- line 569 ----------------------------------------
        .           	{
        .           	  *this = __x;
        .           	  __x._M_reset();
        .           	}
        .           #endif
        .           
        .           	_GLIBCXX20_CONSTEXPR
        .           	void
       12 ( 0.00%)  	_M_reset() _GLIBCXX_NOEXCEPT
       25 ( 0.00%)  	{ *this = _Bvector_impl_data(); }
      100 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_Bvector_impl_data() (1x)
        .           
        .           	_GLIBCXX20_CONSTEXPR
        .           	void
        .           	_M_swap_data(_Bvector_impl_data& __x) _GLIBCXX_NOEXCEPT
        .           	{
        .           	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
        .           	  // information used by TBAA.
        .           	  std::swap(*this, __x);
        .           	}
        .                 };
        .           
       12 ( 0.00%)        struct _Bvector_impl
        .           	: public _Bit_alloc_type, public _Bvector_impl_data
        .                 {
        .           	_GLIBCXX20_CONSTEXPR
        .           	_Bvector_impl() _GLIBCXX_NOEXCEPT_IF(
        .           	  is_nothrow_default_constructible<_Bit_alloc_type>::value)
        .           #if __cpp_concepts && __cpp_lib_type_trait_variable_templates
        .           	requires is_default_constructible_v<_Bit_alloc_type>
        .           #endif
        .           	: _Bit_alloc_type()
        .           	{ }
        .           
        .           	_GLIBCXX20_CONSTEXPR
    1,717 ( 0.00%)  	_Bvector_impl(const _Bit_alloc_type& __a) _GLIBCXX_NOEXCEPT
      606 ( 0.00%)  	: _Bit_alloc_type(__a)
   10,100 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_Bvector_impl_data() (101x)
      303 ( 0.00%)  	{ }
        .           
        .           #if __cplusplus >= 201103L
        .           	// Not defaulted, to enforce noexcept(true) even when
        .           	// !is_nothrow_move_constructible<_Bit_alloc_type>.
        .           	_GLIBCXX20_CONSTEXPR
        .           	_Bvector_impl(_Bvector_impl&& __x) noexcept
        .           	: _Bit_alloc_type(std::move(__x)), _Bvector_impl_data(std::move(__x))
        .           	{ }
-- line 613 ----------------------------------------
-- line 615 ----------------------------------------
        .           	_GLIBCXX20_CONSTEXPR
        .           	_Bvector_impl(_Bit_alloc_type&& __a, _Bvector_impl&& __x) noexcept
        .           	: _Bit_alloc_type(std::move(__a)), _Bvector_impl_data(std::move(__x))
        .           	{ }
        .           #endif
        .           
        .           	_GLIBCXX20_CONSTEXPR
        .           	_Bit_type*
      116 ( 0.00%)  	_M_end_addr() const _GLIBCXX_NOEXCEPT
        .           	{
       14 ( 0.00%)  	  if (this->_M_end_of_storage)
       20 ( 0.00%)  	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
       20 ( 0.00%)  => /usr/include/c++/13/bits/move.h:unsigned long* std::__addressof<unsigned long>(unsigned long&) (2x)
        .           	  return 0;
        4 ( 0.00%)  	}
        .                 };
        .           
        .               public:
        .                 typedef _Alloc allocator_type;
        .           
        .                 _GLIBCXX20_CONSTEXPR
        .                 _Bit_alloc_type&
        .                 _M_get_Bit_allocator() _GLIBCXX_NOEXCEPT
        .                 { return this->_M_impl; }
        .           
        .                 _GLIBCXX20_CONSTEXPR
        .                 const _Bit_alloc_type&
      700 ( 0.00%)        _M_get_Bit_allocator() const _GLIBCXX_NOEXCEPT
      300 ( 0.00%)        { return this->_M_impl; }
        .           
        .                 _GLIBCXX20_CONSTEXPR
        .                 allocator_type
        .                 get_allocator() const _GLIBCXX_NOEXCEPT
        .                 { return allocator_type(_M_get_Bit_allocator()); }
        .           
        .           #if __cplusplus >= 201103L
        .                 _Bvector_base() = default;
        .           #else
        .                 _Bvector_base() { }
        .           #endif
        .           
        .                 _GLIBCXX20_CONSTEXPR
    1,212 ( 0.00%)        _Bvector_base(const allocator_type& __a)
    1,515 ( 0.00%)        : _M_impl(__a) { }
   12,928 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl(std::allocator<unsigned long> const&) (101x)
        .           
        .           #if __cplusplus >= 201103L
        .                 _Bvector_base(_Bvector_base&&) = default;
        .           
        .                 _GLIBCXX20_CONSTEXPR
        .                 _Bvector_base(_Bvector_base&& __x, const allocator_type& __a) noexcept
        .                 : _M_impl(_Bit_alloc_type(__a), std::move(__x._M_impl))
        .                 { }
        .           #endif
        .           
        .                 _GLIBCXX20_CONSTEXPR
        8 ( 0.00%)        ~_Bvector_base()
       15 ( 0.00%)        { this->_M_deallocate(); }
    1,803 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_M_deallocate() (1x)
       13 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl() (1x)
        .           
        .               protected:
        .                 _Bvector_impl _M_impl;
        .           
        .                 _GLIBCXX20_CONSTEXPR
        .                 _Bit_pointer
    1,212 ( 0.00%)        _M_allocate(size_t __n)
        .                 {
    1,414 ( 0.00%)  	_Bit_pointer __p = _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n));
    1,212 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_S_nword(unsigned long) (101x)
        .           #if __cpp_lib_is_constant_evaluated && __cpp_constexpr_dynamic_alloc
      606 ( 0.00%)  	if (std::is_constant_evaluated())
      909 ( 0.00%)  => /usr/include/c++/13/type_traits:std::is_constant_evaluated() (101x)
        .           	  {
        .           	    __n = _S_nword(__n);
        .           	    for (size_t __i = 0; __i < __n; ++__i)
        .           	      std::construct_at(std::to_address(__p) + __i);
        .           	  }
        .           #endif
      505 ( 0.00%)  	return __p;
      505 ( 0.00%)        }
        .           
        .                 _GLIBCXX20_CONSTEXPR
        .                 void
        8 ( 0.00%)        _M_deallocate()
        .                 {
      307 ( 0.00%)  	if (_M_impl._M_start._M_p)
        .           	  {
      313 ( 0.00%)  	    const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;
       37 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_M_end_addr() const (1x)
       12 ( 0.00%)  	    _Bit_alloc_traits::deallocate(_M_impl,
        5 ( 0.00%)  					  _M_impl._M_end_of_storage - __n,
        .           					  __n);
        6 ( 0.00%)  	    _M_impl._M_reset();
      137 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_reset() (1x)
        .           	  }
        3 ( 0.00%)        }
        .           
        .           #if __cplusplus >= 201103L
        .                 _GLIBCXX20_CONSTEXPR
        .                 void
        .                 _M_move_data(_Bvector_base&& __x) noexcept
        .                 { _M_impl._M_move_data(std::move(__x._M_impl)); }
        .           #endif
        .           
        .                 _GLIBCXX_CONSTEXPR
        .                 static size_t
    1,414 ( 0.00%)        _S_nword(size_t __n)
    1,010 ( 0.00%)        { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
        .               };
        .           
        .             /**
        .              *  @brief  A specialization of vector for booleans which offers fixed time
        .              *  access to individual elements in any order.
        .              *
        .              *  @ingroup sequences
        .              *  @headerfile vector
-- line 723 ----------------------------------------
-- line 787 ----------------------------------------
        .           #if __cplusplus >= 201103L
        .                 _GLIBCXX20_CONSTEXPR
        .                 explicit
        .                 vector(size_type __n, const allocator_type& __a = allocator_type())
        .                 : vector(__n, false, __a)
        .                 { }
        .           
        .                 _GLIBCXX20_CONSTEXPR
       12 ( 0.00%)        vector(size_type __n, const bool& __value,
        .           	     const allocator_type& __a = allocator_type())
        .           #else
        .                 explicit
        .                 vector(size_type __n, const bool& __value = bool(),
        .           	     const allocator_type& __a = allocator_type())
        .           #endif
        8 ( 0.00%)        : _Base(__a)
      161 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&) (1x)
        .                 {
        8 ( 0.00%)  	_M_initialize(__n);
      578 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long) (1x)
       10 ( 0.00%)  	_M_initialize_value(__value);
      128 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::_M_initialize_value(bool) (1x)
        4 ( 0.00%)        }
        .           
        .                 _GLIBCXX20_CONSTEXPR
    1,300 ( 0.00%)        vector(const vector& __x)
    2,200 ( 0.00%)        : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
   16,100 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&) (100x)
    1,000 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_M_get_Bit_allocator() const (100x)
        .                 {
    1,600 ( 0.00%)  	const_iterator __xbegin = __x.begin(), __xend = __x.end();
    7,200 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::end() const (100x)
    7,200 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::begin() const (100x)
    1,400 ( 0.00%)  	_M_initialize(__x.size());
   57,800 ( 0.01%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long) (100x)
   22,700 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::size() const (100x)
    2,700 ( 0.00%)  	_M_copy_aligned(__xbegin, __xend, begin());
1,139,900 ( 0.17%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::_M_copy_aligned(std::_Bit_const_iterator, std::_Bit_const_iterator, std::_Bit_iterator) (100x)
    7,200 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::begin() (100x)
      700 ( 0.00%)        }
        .           
        .           #if __cplusplus >= 201103L
        .                 vector(vector&&) = default;
        .           
        .               private:
        .                 _GLIBCXX20_CONSTEXPR
        .                 vector(vector&& __x, const allocator_type& __a, true_type) noexcept
        .                 : _Base(std::move(__x), __a)
-- line 823 ----------------------------------------
-- line 882 ----------------------------------------
        .           	{
        .           	  // Check whether it's an integral type. If so, it's not an iterator.
        .           	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
        .           	  _M_initialize_dispatch(__first, __last, _Integral());
        .           	}
        .           #endif
        .           
        .                 _GLIBCXX20_CONSTEXPR
       17 ( 0.00%)        ~vector() _GLIBCXX_NOEXCEPT { }
    1,839 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::~_Bvector_base() (1x)
        .           
        .                 _GLIBCXX20_CONSTEXPR
        .                 vector&
        .                 operator=(const vector& __x)
        .                 {
        .           	if (&__x == this)
        .           	  return *this;
        .           #if __cplusplus >= 201103L
-- line 898 ----------------------------------------
-- line 987 ----------------------------------------
        .                 _GLIBCXX20_CONSTEXPR
        .                 void
        .                 assign(initializer_list<bool> __l)
        .                 { _M_assign_aux(__l.begin(), __l.end(), random_access_iterator_tag()); }
        .           #endif
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 iterator
  777,689 ( 0.12%)        begin() _GLIBCXX_NOEXCEPT
1,484,679 ( 0.23%)        { return iterator(this->_M_impl._M_start._M_p, 0); }
2,827,960 ( 0.43%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) (70,699x)
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 const_iterator
    2,200 ( 0.00%)        begin() const _GLIBCXX_NOEXCEPT
    4,200 ( 0.00%)        { return const_iterator(this->_M_impl._M_start._M_p, 0); }
    8,000 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_const_iterator::_Bit_const_iterator(unsigned long*, unsigned int) (200x)
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 iterator
        .                 end() _GLIBCXX_NOEXCEPT
        .                 { return this->_M_impl._M_finish; }
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 const_iterator
    2,200 ( 0.00%)        end() const _GLIBCXX_NOEXCEPT
    4,000 ( 0.00%)        { return this->_M_impl._M_finish; }
    8,200 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_const_iterator::_Bit_const_iterator(std::_Bit_iterator const&) (200x)
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 reverse_iterator
        .                 rbegin() _GLIBCXX_NOEXCEPT
        .                 { return reverse_iterator(end()); }
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 const_reverse_iterator
-- line 1019 ----------------------------------------
-- line 1049 ----------------------------------------
        .                 [[__nodiscard__]] _GLIBCXX20_CONSTEXPR
        .                 const_reverse_iterator
        .                 crend() const noexcept
        .                 { return const_reverse_iterator(begin()); }
        .           #endif
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 size_type
    1,100 ( 0.00%)        size() const _GLIBCXX_NOEXCEPT
    3,100 ( 0.00%)        { return size_type(end() - begin()); }
    7,200 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::end() const (100x)
    7,200 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::begin() const (100x)
    4,100 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::operator-(std::_Bit_iterator_base const&, std::_Bit_iterator_base const&) (100x)
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 size_type
        .                 max_size() const _GLIBCXX_NOEXCEPT
        .                 {
        .           	const size_type __isize =
        .           	  __gnu_cxx::__numeric_traits<difference_type>::__max
        .           	  - int(_S_word_bit) + 1;
-- line 1066 ----------------------------------------
-- line 1078 ----------------------------------------
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 bool
        .                 empty() const _GLIBCXX_NOEXCEPT
        .                 { return begin() == end(); }
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 reference
  847,188 ( 0.13%)        operator[](size_type __n)
1,553,178 ( 0.24%)        { return begin()[__n]; }
13,908,003 ( 2.12%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::operator[](long) const (70,599x)
5,083,128 ( 0.77%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::begin() (70,599x)
        .           
        .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
        .                 const_reference
        .                 operator[](size_type __n) const
        .                 { return begin()[__n]; }
        .           
        .               protected:
        .                 _GLIBCXX20_CONSTEXPR
-- line 1095 ----------------------------------------
-- line 1331 ----------------------------------------
        .           	emplace(const_iterator __pos, _Args&&... __args)
        .           	{ return insert(__pos, bool(__args...)); }
        .           #endif
        .           
        .               protected:
        .                 // Precondition: __first._M_offset == 0 && __result._M_offset == 0.
        .                 _GLIBCXX20_CONSTEXPR
        .                 iterator
    1,800 ( 0.00%)        _M_copy_aligned(const_iterator __first, const_iterator __last,
        .           		      iterator __result)
        .                 {
    1,000 ( 0.00%)  	_Bit_type* __q = std::copy(__first._M_p, __last._M_p, __result._M_p);
   26,900 ( 0.00%)  => /usr/include/c++/13/bits/stl_algobase.h:unsigned long* std::copy<unsigned long*, unsigned long*>(unsigned long*, unsigned long*, unsigned long*) (100x)
    3,100 ( 0.00%)  	return std::copy(const_iterator(__last._M_p, 0), __last,
1,097,900 ( 0.17%)  => /usr/include/c++/13/bits/stl_algobase.h:std::_Bit_iterator std::copy<std::_Bit_const_iterator, std::_Bit_iterator>(std::_Bit_const_iterator, std::_Bit_const_iterator, std::_Bit_iterator) (100x)
    4,000 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_const_iterator::_Bit_const_iterator(unsigned long*, unsigned int) (100x)
    4,000 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) (100x)
      600 ( 0.00%)  			 iterator(__q, 0));
      600 ( 0.00%)        }
        .           
        .                 _GLIBCXX20_CONSTEXPR
        .                 void
    1,212 ( 0.00%)        _M_initialize(size_type __n)
        .                 {
      505 ( 0.00%)  	if (__n)
        .           	  {
      909 ( 0.00%)  	    _Bit_pointer __q = this->_M_allocate(__n);
   33,431 ( 0.01%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_M_allocate(unsigned long) (101x)
    1,111 ( 0.00%)  	    this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
    1,212 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_S_nword(unsigned long) (101x)
    1,515 ( 0.00%)  	    iterator __start = iterator(std::__addressof(*__q), 0);
    4,040 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) (101x)
    1,010 ( 0.00%)  => /usr/include/c++/13/bits/move.h:unsigned long* std::__addressof<unsigned long>(unsigned long&) (101x)
      505 ( 0.00%)  	    this->_M_impl._M_start = __start;
    1,515 ( 0.00%)  	    this->_M_impl._M_finish = __start + difference_type(__n);
   10,706 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::operator+(std::_Bit_iterator const&, long) (101x)
        .           	  }
      707 ( 0.00%)        }
        .           
        .                 _GLIBCXX20_CONSTEXPR
        .                 void
       11 ( 0.00%)        _M_initialize_value(bool __x) _GLIBCXX_NOEXCEPT
        .                 {
        8 ( 0.00%)  	if (_Bit_type* __p = this->_M_impl._M_start._M_p)
       18 ( 0.00%)  	  __fill_bvector_n(__p, this->_M_impl._M_end_addr() - __p, __x);
       50 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::__fill_bvector_n(unsigned long*, unsigned long, bool) (1x)
       37 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_M_end_addr() const (1x)
        4 ( 0.00%)        }
        .           
        .                 _GLIBCXX20_CONSTEXPR
        .                 void
        .                 _M_reallocate(size_type __n);
        .           
        .           #if __cplusplus >= 201103L
        .                 _GLIBCXX20_CONSTEXPR
        .                 bool
-- line 1375 ----------------------------------------
-- line 1580 ----------------------------------------
        .                 *__v &= ~__mask;
        .             }
        .           
        .             // Fill N full words, as if using memset, but usable in constant expressions.
        .             __attribute__((__nonnull__))
        .             _GLIBCXX20_CONSTEXPR
        .             inline void
        .             __fill_bvector_n(_Bit_type* __p, size_t __n, bool __x) _GLIBCXX_NOEXCEPT
       11 ( 0.00%)    {
        .           #if __cpp_lib_is_constant_evaluated
        6 ( 0.00%)      if (std::is_constant_evaluated())
        9 ( 0.00%)  => /usr/include/c++/13/type_traits:std::is_constant_evaluated() (1x)
        .               {
        .                 for (size_t __i = 0; __i < __n; ++__i)
        .           	__p[__i] = __x ? ~0ul : 0ul;
        .                 return;
        .               }
        .           #endif
        9 ( 0.00%)      __builtin_memset(__p, __x ? ~0 : 0, __n * sizeof(_Bit_type));
       13 ( 0.00%)  => ???:0x00000000001104a0 (1x)
        2 ( 0.00%)    }
        .           
        .           
        .             _GLIBCXX20_CONSTEXPR
        .             inline void
        .             __fill_a1(_GLIBCXX_STD_C::_Bit_iterator __first,
        .           	    _GLIBCXX_STD_C::_Bit_iterator __last, const bool& __x)
        .             {
        .               if (__first._M_p != __last._M_p)
-- line 1606 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: ../question2/Graph.cpp
--------------------------------------------------------------------------------
Ir                 

        .           #include "Graph.hpp"
        .           using namespace std;
        .           /**
        .            * @brief Constructor for Graph class that initializes a graph with a given number of vertices.
        .            * @param numOfVertex The number of vertices in the graph.
        .            * @throws std::runtime_error if numOfVertex is not positive.
        .            */
       21 ( 0.00%)  Graph:: Graph(int numOfVertex){
       73 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::vector() (1x)
        2 ( 0.00%)      if(numOfVertex<=0){
        .                   throw std::runtime_error("you must have positive number of vertex");
        .               }
        3 ( 0.00%)      this->numOfVertex=numOfVertex;
       30 ( 0.00%)      neighborsMatrix.resize(numOfVertex,std::vector<bool>(numOfVertex,false));
1,283,022 ( 0.20%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::resize(unsigned long, std::vector<bool, std::allocator<bool> > const&) (1x)
    1,856 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::~vector() (1x)
      909 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::vector(unsigned long, bool const&, std::allocator<bool> const&) (1x)
        9 ( 0.00%)  }
        .           
        .           /**
        .            * @brief Constructor for Graph class that initializes a graph with a given number of vertices and a neighbors matrix.
        .            * @param numOfVertex The number of vertices in the graph.
        .            * @param neighborsMatrix A 2D vector representing the adjacency matrix of the graph.
        .            * @throws std::runtime_error if numOfVertex is not positive, if the matrix size is not N x N, or if some vertex is connected to itself or if the graph is not undirected.
        .            */
        .           Graph::Graph(int numOfVertex ,const std::vector<std::vector<bool>> neighborsMatrix){
-- line 22 ----------------------------------------
-- line 46 ----------------------------------------
        .           }
        .           
        .           /**
        .            * @brief Adds an edge between two vertices in the graph.
        .            * @param src The source vertex.
        .            * @param dest The destination vertex.
        .            * @throws std::runtime_error if src or dest is out of bounds or if they are the same vertex or they are already connected.
        .            */
  613,410 ( 0.09%)  void Graph::addEdge(int src,int dest){
  858,774 ( 0.13%)      if(src>=numOfVertex || src<0 || dest>=numOfVertex || dest<0){
  122,682 ( 0.02%)          throw std::runtime_error("src and dest must be in {0,....,n-1}");
        .               }
  123,867 ( 0.02%)      if(src == dest){
    8,690 ( 0.00%)          throw std::runtime_error("src and dest cant be the same");
5,961,641 ( 0.91%)  => ???:0x00000000001106e0 (395x)
   72,108 ( 0.01%)  => ???:0x0000000000110440 (395x)
   34,902 ( 0.01%)  => ???:0x0000000000110480 (395x)
        .               }
1,281,118 ( 0.19%)      if(neighborsMatrix[src][dest]){
12,271,197 ( 1.87%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) (40,499x)
  728,982 ( 0.11%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::operator[](unsigned long) (40,499x)
  688,483 ( 0.10%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::operator bool() const (40,499x)
  782,078 ( 0.12%)          throw std::runtime_error("this 2 vtx already connected");
582,470,365 (88.62%)  => ???:0x00000000001106e0 (35,549x)
6,185,526 ( 0.94%)  => ???:0x0000000000110440 (35,549x)
3,128,312 ( 0.48%)  => ???:0x0000000000110480 (35,549x)
        .               }
  138,600 ( 0.02%)      neighborsMatrix[src][dest]=true;
1,499,850 ( 0.23%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) (4,950x)
   89,100 ( 0.01%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::operator[](unsigned long) (4,950x)
  133,650 ( 0.02%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::operator=(bool) (4,950x)
  138,600 ( 0.02%)      neighborsMatrix[dest][src]=true;
1,499,850 ( 0.23%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) (4,950x)
   89,100 ( 0.01%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::operator[](unsigned long) (4,950x)
  133,650 ( 0.02%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::operator=(bool) (4,950x)
   44,550 ( 0.01%)  }
        .           
        .           /**
        .            * @brief Checks if the graph is connected.
        .            * @return true if the graph is connected, false otherwise.
        .            * This function uses a fake breadth-first search (BFS) algorithm to traverse the graph and check
        .            * we build this function beacuse graph must be connected to have Euler cycle.
        .            */
       12 ( 0.00%)  bool Graph::isConnected(){
        3 ( 0.00%)      vector<int> distance;
      806 ( 0.00%)      for(int i=0;i<numOfVertex;i++){
      900 ( 0.00%)          distance.push_back(1);
   42,231 ( 0.01%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::push_back(int&&) (100x)
        .               }
        6 ( 0.00%)      queue<int> bfs;
      991 ( 0.00%)  => /usr/include/c++/13/bits/stl_queue.h:std::queue<int, std::deque<int, std::allocator<int> > >::queue<std::deque<int, std::allocator<int> >, void>() (1x)
        9 ( 0.00%)      bfs.push(0);
      327 ( 0.00%)  => /usr/include/c++/13/bits/stl_queue.h:std::queue<int, std::deque<int, std::allocator<int> > >::push(int&&) (1x)
      919 ( 0.00%)      while(!bfs.empty()){
    5,916 ( 0.00%)  => /usr/include/c++/13/bits/stl_queue.h:std::queue<int, std::deque<int, std::allocator<int> > >::empty() const (102x)
      808 ( 0.00%)          int v=bfs.front();
   11,211 ( 0.00%)  => /usr/include/c++/13/bits/stl_queue.h:std::queue<int, std::deque<int, std::allocator<int> > >::front() (101x)
      303 ( 0.00%)          bfs.pop();
    8,383 ( 0.00%)  => /usr/include/c++/13/bits/stl_queue.h:std::queue<int, std::deque<int, std::allocator<int> > >::pop() (101x)
  142,410 ( 0.02%)          for(int i=0;i<numOfVertex;i++){
  473,888 ( 0.07%)              if(neighborsMatrix[v][i] && distance[i] == 1){
3,060,300 ( 0.47%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) (10,100x)
  181,800 ( 0.03%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::operator[](unsigned long) (10,100x)
  171,700 ( 0.03%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::operator bool() const (10,100x)
  149,985 ( 0.02%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::operator[](unsigned long) (9,999x)
    1,000 ( 0.00%)                  distance[i] =0;
    1,500 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::operator[](unsigned long) (100x)
      500 ( 0.00%)                  bfs.push(i);
   13,100 ( 0.00%)  => /usr/include/c++/13/bits/stl_queue.h:std::queue<int, std::deque<int, std::allocator<int> > >::push(int const&) (100x)
        .                       }
        .                   }
        .               }
      809 ( 0.00%)      for(int i=0;i<numOfVertex;i++){
    1,400 ( 0.00%)          if(distance[i]==1){
    1,500 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::operator[](unsigned long) (100x)
        .                       return false;
        .                   }
        .               }
        1 ( 0.00%)      return true;
       19 ( 0.00%)  }
      698 ( 0.00%)  => /usr/include/c++/13/bits/stl_queue.h:std::queue<int, std::deque<int, std::allocator<int> > >::~queue() (1x)
      203 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::~vector() (1x)
        .           
        .           /**
        .            * @brief Finds an Euler cycle in the graph.
        .            * if the is a Euler cycle in the graph, it returns a vector containing the vertices in the cycle by their order.
        .            * If the graph is not connected or if any vertex has an odd degree, it returns an empty vector.
        .            * @return A vector of integers representing the vertices in the Euler cycle, or an empty vector if no Euler cycle exists.
        .            */
       13 ( 0.00%)  vector<int> Graph::findEuler(){
        1 ( 0.00%)      int counter=0;
        4 ( 0.00%)      vector<int> EulerCycle;
        9 ( 0.00%)      if(!this->isConnected()){
4,273,638 ( 0.65%)  => ../question2/Graph.cpp:Graph::isConnected() (1x)
        .                   cout<<"There cant be Euler cycle in unconnected graph"<<endl;
        .                   return EulerCycle;
        .               }
        6 ( 0.00%)      for(int i=0;i<numOfVertex;i++){
        1 ( 0.00%)          counter=0;
      809 ( 0.00%)          for(int j=0;j<numOfVertex;j++){
    2,900 ( 0.00%)              if(neighborsMatrix[i][j]){
   30,300 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) (100x)
    1,800 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::operator[](unsigned long) (100x)
    1,700 ( 0.00%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::operator bool() const (100x)
      396 ( 0.00%)                  counter++;
        .                       }
        .                   }
       13 ( 0.00%)          if(counter%2==1){
       34 ( 0.00%)              cout<<"This graph is not containing Euler cycle becase vtx "<<i<<" have odd degree"<<endl;
      887 ( 0.00%)  => ???:0x0000000000110550 (2x)
      434 ( 0.00%)  => ???:0x0000000000110590 (1x)
      410 ( 0.00%)  => ???:0x00000000001106f0 (1x)
        1 ( 0.00%)              return EulerCycle;
        .                   }
        .               }
        .               vector<vector<bool>> copyMat = neighborsMatrix;
        .               stack<int> s;
        .               s.push(0);
        .               while(!s.empty()){
        .                   int v= s.top();
        .                   bool foundEdge = false;
-- line 129 ----------------------------------------
-- line 137 ----------------------------------------
        .                       }
        .                   }
        .                   if(!foundEdge){
        .                       EulerCycle.push_back(v);
        .                       s.pop();
        .                   }
        .               }
        .               return EulerCycle;
       10 ( 0.00%)  }
        .           /**
        .            * @brief this function print the neighbors of every vertex in the graph.
        .            */
       11 ( 0.00%)  void Graph::printGraph(){
      806 ( 0.00%)     for(int i=0;i<numOfVertex;i++){
    2,000 ( 0.00%)          cout<<"neighbors of : "<<i<<std::endl;
   46,895 ( 0.01%)  => ???:0x00000000001106f0 (100x)
   38,118 ( 0.01%)  => ???:0x0000000000110550 (100x)
   46,218 ( 0.01%)  => ???:0x0000000000110590 (100x)
  110,900 ( 0.02%)          for(int j=0;j<numOfVertex;j++){
  319,700 ( 0.05%)              if(neighborsMatrix[i][j]){
3,030,000 ( 0.46%)  => /usr/include/c++/13/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) (10,000x)
  180,000 ( 0.03%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::operator[](unsigned long) (10,000x)
  170,000 ( 0.03%)  => /usr/include/c++/13/bits/stl_bvector.h:std::_Bit_reference::operator bool() const (10,000x)
  128,700 ( 0.02%)                  cout<<" " <<j ;
4,216,707 ( 0.64%)  => ???:0x00000000001106f0 (9,900x)
2,742,300 ( 0.42%)  => ???:0x0000000000110550 (9,900x)
        .                       }
        .                   }
      800 ( 0.00%)          cout<<std::endl;
   43,400 ( 0.01%)  => ???:0x0000000000110590 (100x)
        .              } 
       20 ( 0.00%)  }  749,799 ( 0.11%)  => ???:__gcov_exit (1x)

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/13/bits/stl_vector.h
--------------------------------------------------------------------------------
Ir               

-- line 91 ----------------------------------------
      .           
      .                 struct _Vector_impl_data
      .                 {
      .           	pointer _M_start;
      .           	pointer _M_finish;
      .           	pointer _M_end_of_storage;
      .           
      .           	_GLIBCXX20_CONSTEXPR
      7 ( 0.00%)  	_Vector_impl_data() _GLIBCXX_NOEXCEPT
      6 ( 0.00%)  	: _M_start(), _M_finish(), _M_end_of_storage()
      3 ( 0.00%)  	{ }
      .           
      .           #if __cplusplus >= 201103L
      .           	_GLIBCXX20_CONSTEXPR
      .           	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
      .           	: _M_start(__x._M_start), _M_finish(__x._M_finish),
      .           	  _M_end_of_storage(__x._M_end_of_storage)
      .           	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
      .           #endif
-- line 109 ----------------------------------------
-- line 129 ----------------------------------------
      .           	  __x._M_copy_data(__tmp);
      .           	}
      .                 };
      .           
      .                 struct _Vector_impl
      .           	: public _Tp_alloc_type, public _Vector_impl_data
      .                 {
      .           	_GLIBCXX20_CONSTEXPR
     12 ( 0.00%)  	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
      .           	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
      .           #if __cpp_lib_concepts
      .           	requires is_default_constructible_v<_Tp_alloc_type>
      .           #endif
      6 ( 0.00%)  	: _Tp_alloc_type()
     16 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl_data::_Vector_impl_data() (1x)
      3 ( 0.00%)  	{ }
      .           
      .           	_GLIBCXX20_CONSTEXPR
      .           	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
      .           	: _Tp_alloc_type(__a)
      .           	{ }
      .           
      .           #if __cplusplus >= 201103L
      .           	// Not defaulted, to enforce noexcept(true) even when
-- line 151 ----------------------------------------
-- line 293 ----------------------------------------
      .           #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
      .                 };
      .           
      .               public:
      .                 typedef _Alloc allocator_type;
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 _Tp_alloc_type&
    147 ( 0.00%)        _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
     63 ( 0.00%)        { return this->_M_impl; }
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 const _Tp_alloc_type&
    126 ( 0.00%)        _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
     54 ( 0.00%)        { return this->_M_impl; }
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 allocator_type
      .                 get_allocator() const _GLIBCXX_NOEXCEPT
      .                 { return allocator_type(_M_get_Tp_allocator()); }
      .           
      .           #if __cplusplus >= 201103L
     17 ( 0.00%)        _Vector_base() = default;
     39 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_impl::_Vector_impl() (1x)
      .           #else
      .                 _Vector_base() { }
      .           #endif
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
      .                 : _M_impl(__a) { }
      .           
-- line 323 ----------------------------------------
-- line 359 ----------------------------------------
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 _Vector_base(const allocator_type& __a, _Vector_base&& __x)
      .                 : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
      .                 { }
      .           #endif
      .           
      .                 _GLIBCXX20_CONSTEXPR
      3 ( 0.00%)        ~_Vector_base() _GLIBCXX_NOEXCEPT
      .                 {
      .           	_M_deallocate(_M_impl._M_start,
     11 ( 0.00%)  		      _M_impl._M_end_of_storage - _M_impl._M_start);
      4 ( 0.00%)        }
      .           
      .               public:
      .                 _Vector_impl _M_impl;
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 pointer
    108 ( 0.00%)        _M_allocate(size_t __n)
      .                 {
      .           	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
    117 ( 0.00%)  	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
     45 ( 0.00%)        }
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 void
     90 ( 0.00%)        _M_deallocate(pointer __p, size_t __n)
      .                 {
      .           	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
     45 ( 0.00%)  	if (__p)
     84 ( 0.00%)  	  _Tr::deallocate(_M_impl, __p, __n);
     27 ( 0.00%)        }
      .           
      .               protected:
      .                 _GLIBCXX20_CONSTEXPR
      .                 void
      .                 _M_create_storage(size_t __n)
      .                 {
      .           	this->_M_impl._M_start = this->_M_allocate(__n);
      .           	this->_M_impl._M_finish = this->_M_impl._M_start;
-- line 399 ----------------------------------------
-- line 496 ----------------------------------------
      .                 }
      .           
      .                 static pointer
      .                 _S_do_relocate(pointer, pointer, pointer __result,
      .           		     _Tp_alloc_type&, false_type) noexcept
      .                 { return __result; }
      .           
      .                 static _GLIBCXX20_CONSTEXPR pointer
    176 ( 0.00%)        _S_relocate(pointer __first, pointer __last, pointer __result,
      .           		  _Tp_alloc_type& __alloc) noexcept
      .                 {
      .           #if __cpp_if_constexpr
      .           	// All callers have already checked _S_use_relocate() so just do it.
    192 ( 0.00%)  	return std::__relocate_a(__first, __last, __result, __alloc);
  2,069 ( 0.00%)  => /usr/include/c++/13/bits/stl_uninitialized.h:int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) (16x)
      .           #else
      .           	using __do_it = __bool_constant<_S_use_relocate()>;
      .           	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
      .           #endif
     32 ( 0.00%)        }
      .           #endif // C++11
      .           
      .               protected:
      .                 using _Base::_M_allocate;
      .                 using _Base::_M_deallocate;
      .                 using _Base::_M_impl;
      .                 using _Base::_M_get_Tp_allocator;
      .           
-- line 522 ----------------------------------------
-- line 523 ----------------------------------------
      .               public:
      .                 // [23.2.4.1] construct/copy/destroy
      .                 // (assign() and get_allocator() are also listed in this section)
      .           
      .                 /**
      .                  *  @brief  Creates a %vector with no elements.
      .                  */
      .           #if __cplusplus >= 201103L
     17 ( 0.00%)        vector() = default;
     56 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::_Vector_base<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_Vector_base() (1x)
      .           #else
      .                 vector() { }
      .           #endif
      .           
      .                 /**
      .                  *  @brief  Creates a %vector with no elements.
      .                  *  @param  __a  An allocator object.
      .                  */
-- line 539 ----------------------------------------
-- line 725 ----------------------------------------
      .           
      .                 /**
      .                  *  The dtor only erases the elements, and note that if the
      .                  *  elements themselves are pointers, the pointed-to memory is
      .                  *  not touched in any way.  Managing the pointer is the user's
      .                  *  responsibility.
      .                  */
      .                 _GLIBCXX20_CONSTEXPR
     13 ( 0.00%)        ~vector() _GLIBCXX_NOEXCEPT
      .                 {
     10 ( 0.00%)  	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
      6 ( 0.00%)  		      _M_get_Tp_allocator());
     10 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() (1x)
      .           	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
     17 ( 0.00%)        }
      7 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::_Vector_base<int, std::allocator<int> >::~_Vector_base() (1x)
      .           
      .                 /**
      .                  *  @brief  %Vector assignment operator.
      .                  *  @param  __x  A %vector of identical element and allocator types.
      .                  *
      .                  *  All the elements of @a __x are copied, but any unused capacity in
      .                  *  @a __x will not be copied.
      .                  *
-- line 746 ----------------------------------------
-- line 865 ----------------------------------------
      .                 // iterators
      .                 /**
      .                  *  Returns a read/write iterator that points to the first
      .                  *  element in the %vector.  Iteration is done in ordinary
      .                  *  element order.
      .                  */
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 iterator
     88 ( 0.00%)        begin() _GLIBCXX_NOEXCEPT
    112 ( 0.00%)        { return iterator(this->_M_impl._M_start); }
    120 ( 0.00%)  => /usr/include/c++/13/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) (8x)
      .           
      .                 /**
      .                  *  Returns a read-only (constant) iterator that points to the
      .                  *  first element in the %vector.  Iteration is done in ordinary
      .                  *  element order.
      .                  */
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 const_iterator
-- line 882 ----------------------------------------
-- line 885 ----------------------------------------
      .           
      .                 /**
      .                  *  Returns a read/write iterator that points one past the last
      .                  *  element in the %vector.  Iteration is done in ordinary
      .                  *  element order.
      .                  */
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 iterator
  1,199 ( 0.00%)        end() _GLIBCXX_NOEXCEPT
  1,635 ( 0.00%)        { return iterator(this->_M_impl._M_finish); }
     15 ( 0.00%)  => /usr/include/c++/13/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<std::vector<bool, std::allocator<bool> >*, std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > > >::__normal_iterator(std::vector<bool, std::allocator<bool> >* const&) (1x)
      .           
      .                 /**
      .                  *  Returns a read-only (constant) iterator that points one past
      .                  *  the last element in the %vector.  Iteration is done in
      .                  *  ordinary element order.
      .                  */
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 const_iterator
-- line 902 ----------------------------------------
-- line 984 ----------------------------------------
      .                 crend() const noexcept
      .                 { return const_reverse_iterator(begin()); }
      .           #endif
      .           
      .                 // [23.2.4.2] capacity
      .                 /**  Returns the number of elements in the %vector.  */
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 size_type
    266 ( 0.00%)        size() const _GLIBCXX_NOEXCEPT
    348 ( 0.00%)        { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
      .           
      .                 /**  Returns the size() of the largest possible %vector.  */
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 size_type
    144 ( 0.00%)        max_size() const _GLIBCXX_NOEXCEPT
    288 ( 0.00%)        { return _S_max_size(_M_get_Tp_allocator()); }
    768 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) (16x)
    160 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const (16x)
      .           
      .           #if __cplusplus >= 201103L
      .                 /**
      .                  *  @brief  Resizes the %vector to the specified number of elements.
      .                  *  @param  __new_size  Number of elements the %vector should contain.
      .                  *
      .                  *  This function will %resize the %vector to the specified
      .                  *  number of elements.  If the number is smaller than the
-- line 1007 ----------------------------------------
-- line 1026 ----------------------------------------
      .                  *  This function will %resize the %vector to the specified
      .                  *  number of elements.  If the number is smaller than the
      .                  *  %vector's current size the %vector is truncated, otherwise
      .                  *  the %vector is extended and new elements are populated with
      .                  *  given data.
      .                  */
      .                 _GLIBCXX20_CONSTEXPR
      .                 void
     11 ( 0.00%)        resize(size_type __new_size, const value_type& __x)
      .                 {
     13 ( 0.00%)  	if (__new_size > size())
     17 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::size() const (1x)
     25 ( 0.00%)  	  _M_fill_insert(end(), __new_size - size(), __x);
1,282,893 ( 0.20%)  => /usr/include/c++/13/bits/vector.tcc:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::vector<bool, std::allocator<bool> >*, std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > > >, unsigned long, std::vector<bool, std::allocator<bool> > const&) (1x)
     41 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::end() (1x)
     17 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >::size() const (1x)
      .           	else if (__new_size < size())
      .           	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
      5 ( 0.00%)        }
      .           #else
      .                 /**
      .                  *  @brief  Resizes the %vector to the specified number of elements.
      .                  *  @param  __new_size  Number of elements the %vector should contain.
      .                  *  @param  __x  Data with which new elements should be populated.
      .                  *
      .                  *  This function will %resize the %vector to the specified
      .                  *  number of elements.  If the number is smaller than the
-- line 1048 ----------------------------------------
-- line 1118 ----------------------------------------
      .                  *
      .                  *  This operator allows for easy, array-style, data access.
      .                  *  Note that data access with this operator is unchecked and
      .                  *  out_of_range lookups are not defined. (For checked lookups
      .                  *  see at().)
      .                  */
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 reference
646,384 ( 0.10%)        operator[](size_type __n) _GLIBCXX_NOEXCEPT
      .                 {
      .           	__glibcxx_requires_subscript(__n);
615,787 ( 0.09%)  	return *(this->_M_impl._M_start + __n);
161,596 ( 0.02%)        }
      .           
      .                 /**
      .                  *  @brief  Subscript access to the data contained in the %vector.
      .                  *  @param __n The index of the element for which data should be
      .                  *  accessed.
      .                  *  @return  Read-only (constant) reference to data.
      .                  *
      .                  *  This operator allows for easy, array-style, data access.
-- line 1138 ----------------------------------------
-- line 1225 ----------------------------------------
      .                 }
      .           
      .                 /**
      .                  *  Returns a read/write reference to the data at the last
      .                  *  element of the %vector.
      .                  */
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 reference
  1,100 ( 0.00%)        back() _GLIBCXX_NOEXCEPT
      .                 {
      .           	__glibcxx_requires_nonempty();
  2,400 ( 0.00%)  	return *(end() - 1);
  4,800 ( 0.00%)  => /usr/include/c++/13/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator-(long) const (100x)
  4,100 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::end() (100x)
  1,100 ( 0.00%)  => /usr/include/c++/13/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const (100x)
    500 ( 0.00%)        }
      .           
      .                 /**
      .                  *  Returns a read-only (constant) reference to the data at the
      .                  *  last element of the %vector.
      .                  */
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 const_reference
      .                 back() const _GLIBCXX_NOEXCEPT
-- line 1245 ----------------------------------------
-- line 1290 ----------------------------------------
      .           	  }
      .           	else
      .           	  _M_realloc_insert(end(), __x);
      .                 }
      .           
      .           #if __cplusplus >= 201103L
      .                 _GLIBCXX20_CONSTEXPR
      .                 void
    900 ( 0.00%)        push_back(value_type&& __x)
  1,700 ( 0.00%)        { emplace_back(std::move(__x)); }
 38,631 ( 0.01%)  => /usr/include/c++/13/bits/vector.tcc:int& std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) (100x)
  1,000 ( 0.00%)  => /usr/include/c++/13/bits/move.h:std::remove_reference<int&>::type&& std::move<int&>(int&) (100x)
      .           
      .                 template<typename... _Args>
      .           #if __cplusplus > 201402L
      .           	_GLIBCXX20_CONSTEXPR
      .           	reference
      .           #else
      .           	void
      .           #endif
-- line 1307 ----------------------------------------
-- line 1888 ----------------------------------------
      .                 iterator
      .                 _M_emplace_aux(const_iterator __position, value_type&& __v)
      .                 { return _M_insert_rval(__position, std::move(__v)); }
      .           #endif
      .           
      .                 // Called by _M_fill_insert, _M_insert_aux etc.
      .                 _GLIBCXX20_CONSTEXPR
      .                 size_type
    126 ( 0.00%)        _M_check_len(size_type __n, const char* __s) const
      .                 {
    153 ( 0.00%)  	if (max_size() - size() < __n)
    656 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::max_size() const (8x)
    128 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::size() const (8x)
     27 ( 0.00%)  	  __throw_length_error(__N(__s));
      .           
    225 ( 0.00%)  	const size_type __len = size() + (std::max)(size(), __n);
    256 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::size() const (16x)
    140 ( 0.00%)  => /usr/include/c++/13/bits/stl_algobase.h:unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) (8x)
    243 ( 0.00%)  	return (__len < size() || __len > max_size()) ? max_size() : __len;
    656 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::max_size() const (8x)
    128 ( 0.00%)  => /usr/include/c++/13/bits/stl_vector.h:std::vector<int, std::allocator<int> >::size() const (8x)
     54 ( 0.00%)        }
      .           
      .                 // Called by constructors to check initial size.
      .                 static _GLIBCXX20_CONSTEXPR size_type
      .                 _S_check_init_len(size_type __n, const allocator_type& __a)
      .                 {
      .           	if (__n > _S_max_size(_Tp_alloc_type(__a)))
      .           	  __throw_length_error(
      .           	      __N("cannot create std::vector larger than max_size()"));
      .           	return __n;
      .                 }
      .           
      .                 static _GLIBCXX20_CONSTEXPR size_type
    198 ( 0.00%)        _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
      .                 {
      .           	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
      .           	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
      .           	// (even if std::allocator_traits::max_size says we can).
     72 ( 0.00%)  	const size_t __diffmax
      .           	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
     18 ( 0.00%)  	const size_t __allocmax = _Alloc_traits::max_size(__a);
    162 ( 0.00%)  	return (std::min)(__diffmax, __allocmax);
    272 ( 0.00%)  => /usr/include/c++/13/bits/stl_algobase.h:unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) (16x)
     90 ( 0.00%)        }
      .           
      .                 // Internal erase functions follow.
      .           
      .                 // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
      .                 // _M_assign_aux.
      .                 _GLIBCXX20_CONSTEXPR
      .                 void
      .                 _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
-- line 1933 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: ../question3/randomGraph.cpp
--------------------------------------------------------------------------------
Ir               

      .           #include "../question2/Graph.hpp"
      .           #include <iostream>
      .           #include <unistd.h>
      .           
      .           extern char* optarg;
      .           
     15 ( 0.00%)  int main(int argc, char* argv[]) {
      .               if( argc != 4){
      .               }
      .               int opt;
      1 ( 0.00%)      int numOfVertex=-1;
      1 ( 0.00%)      int numOfEdges=-1;
      1 ( 0.00%)      int RandomSeed = -1;
     25 ( 0.00%)      while ((opt = getopt(argc, argv, "v:e:r:")) != -1){
  1,135 ( 0.00%)  => ???:0x00000000001103f0 (4x)
      6 ( 0.00%)          if(opt == 'v'){
      .                       numOfVertex=atoi(optarg);
      .                   }
      5 ( 0.00%)          else if(opt == 'e'){
      1 ( 0.00%)              numOfEdges = atoi(optarg);;
      2 ( 0.00%)          }else if(opt == 'r'){
      1 ( 0.00%)              RandomSeed = atoi(optarg);;
      .                   }
      .               }
      6 ( 0.00%)      if(numOfEdges==-1 || numOfVertex==-1 || RandomSeed==-1){
      .                   std::cerr<<"Usage: ./"<<argv[0]<<" -v numOfVertex (int) -e numOfEdge(int) -r Randomseed(int)"<<std::endl;
      .                   exit(1);
      .               }
      8 ( 0.00%)      unsigned long maxEdge = (numOfVertex -1)*numOfVertex/2;
      3 ( 0.00%)      if((unsigned long)numOfEdges>maxEdge){
      .                   std::cerr<<"E"<<numOfEdges<<" maxEdge "<<maxEdge<<std::endl; 
      .                   std::cerr<<"ypu enter too many edges"<<std::endl;
 35,944 ( 0.01%)          exit(1);
      .               }
      1 ( 0.00%)      int edgesAdded=0;
      4 ( 0.00%)      Graph g(numOfVertex);
1,285,931 ( 0.20%)  => /home/dotan/projects/semester_b/operationSystems/finalProject/question4/../question2/Graph.cpp:Graph::Graph(int) (1x)
      3 ( 0.00%)      srand(RandomSeed);
  6,234 ( 0.00%)  => ???:0x0000000000110540 (1x)
 81,792 ( 0.01%)      while(edgesAdded<numOfEdges){
204,470 ( 0.03%)          int src=rand()%numOfVertex;
2,411,427 ( 0.37%)  => ???:0x0000000000110410 (40,894x)
122,682 ( 0.02%)          int dest =rand()%numOfVertex;
2,411,427 ( 0.37%)  => ???:0x0000000000110410 (40,894x)
      .                   try{
163,576 ( 0.02%)              g.addEdge(src,dest);
619,099,085 (94.19%)  => /home/dotan/projects/semester_b/operationSystems/finalProject/question4/../question2/Graph.cpp:Graph::addEdge(int, int) (40,894x)
  9,900 ( 0.00%)              edgesAdded++;
287,552 ( 0.04%)          }catch(const std::exception& e){
2,048,808 ( 0.31%)  => ???:0x0000000000110450 (35,944x)
      .           
107,832 ( 0.02%)          }
10,930,731 ( 1.66%)  => ???:0x00000000001106a0 (35,944x)
      .               }
      3 ( 0.00%)      g.printGraph();
11,076,561 ( 1.69%)  => /home/dotan/projects/semester_b/operationSystems/finalProject/question4/../question2/Graph.cpp:Graph::printGraph() (1x)
      5 ( 0.00%)      std::vector<int> resualt = g.findEuler();
4,313,366 ( 0.66%)  => /home/dotan/projects/semester_b/operationSystems/finalProject/question4/../question2/Graph.cpp:Graph::findEuler() (1x)
      3 ( 0.00%)      if(resualt.size()!=0){
      .                   std::cout<<"The resualt is:"<<std::endl;
      .                   for(size_t i=0;i<resualt.size();i++){
      .                       if(i!=resualt.size()-1){
      .                           std::cout<<resualt[i]<<" -> ";
      .                       }
      .                       else{
      .                           std::cout<<resualt[i]<<std::endl;
      .                       }
      .                   }
      .               }
     19 ( 0.00%)  }
     34 ( 0.00%)  => ???:__gcov_init (1x)

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./elf/../sysdeps/generic/dl-new-hash.h
  ./elf/../sysdeps/x86_64/tls_get_addr.S
  ./elf/./dl-find_object.h
  ./elf/./elf/dl-find_object.c
  ./elf/./elf/dl-lookup.c
  ./elf/./elf/libc-dl_find_object.c
  ./libio/./libio/fileops.c
  ./libio/./libio/iofwrite.c
  ./libio/./libio/libioP.h
  ./malloc/./malloc/arena.c
  ./malloc/./malloc/malloc.c
  ./nptl/./nptl/pthread_once.c
  ./stdlib/./stdlib/rand.c
  ./stdlib/./stdlib/random.c
  ./stdlib/./stdlib/random_r.c
  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S
  ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S

--------------------------------------------------------------------------------
Ir                  
--------------------------------------------------------------------------------
31,476,364 ( 4.79%)  events annotated

